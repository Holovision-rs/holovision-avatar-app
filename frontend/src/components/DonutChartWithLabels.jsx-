import React from "react";
import { PieChart, Pie, Cell, ResponsiveContainer, Sector } from "recharts";

const COLORS = ["#00c6ff", "#7b61ff", "#00d3b8"];

const renderActiveShape = (props) => {
  const RADIAN = Math.PI / 180;
  const {
    cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,
    fill, payload, percent
  } = props;

  const sin = Math.sin(-RADIAN * midAngle);
  const cos = Math.cos(-RADIAN * midAngle);
  const sx = cx + (outerRadius + 10) * cos;
  const sy = cy + (outerRadius + 10) * sin;
  const mx = cx + (outerRadius + 30) * cos;
  const my = cy + (outerRadius + 30) * sin;

  return (
    <g>
      <Sector
        cx={cx} cy={cy}
        innerRadius={innerRadius} outerRadius={outerRadius}
        startAngle={startAngle} endAngle={endAngle}
        fill={fill}
      />
      <path d={`M${sx},${sy}L${mx},${my}`} stroke={fill} fill="none" />
      <text x={mx + (cos >= 0 ? 12 : -12)} y={my} textAnchor={cos >= 0 ? "start" : "end"} fill="#fff">
        {(percent * 100).toFixed(1)}%
      </text>
    </g>
  );
};

const DonutChartWithLabels = ({ data }) => {
  return (
    <div className="donut-container">
      <ResponsiveContainer width={250} height={250}>
        <PieChart>
          <Pie
            activeIndex={0}
            activeShape={renderActiveShape}
            data={data}
            cx="50%"
            cy="50%"
            innerRadius={60}
            outerRadius={80}
            dataKey="value"
            stroke="none"
          >
            {data.map((entry, index) => (
              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
            ))}
          </Pie>
        </PieChart>
      </ResponsiveContainer>
      <div className="legend-row">
        {data.map((entry, i) => (
          <span key={i} className="legend-item">
            <span
              className="legend-dot"
              style={{ backgroundColor: COLORS[i % COLORS.length] }}
            ></span>
            {entry.name}
          </span>
        ))}
      </div>
    </div>
  );
};

export default DonutChartWithLabels;